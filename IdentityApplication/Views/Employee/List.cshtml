@using IdentityApplication.Core;
@model IdentityApplication.Core.ViewModel.InsertEmployeeRequest

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3" id="successMessage">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3" id="errorMessage">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    @if (User.IsInRole(Constants.Roles.Administrator))
    {
        <div class="col-md-6">
            <label for="locationSearch">Search by Location:</label>
            @Html.DropDownListFor(m => m.SelectedLocation, Model.Locations, "Location", new { @class = "form-select", id = "locationSearch" })
        </div>
    }
    <div class="col-md-6">
        <label for="departmentSearch">Search by Department:</label>
        @Html.DropDownListFor(m => m.SelectedDepartment, Model.Departments, "Department", new { @class = "form-select", id = "departmentSearch" })
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <label for="categorySearch">Search by Category:</label>
        @Html.DropDownListFor(m => m.SelectedCategory, Model.Categories, "Category", new { @class = "form-select", id = "categorySearch" })
    </div>
    <div class="col-md-6">
        <label for="subcategorySearch">Search by Sub Category:</label>
        @Html.DropDownListFor(m => m.SelectedSubCategory, Model.SubCategories, "Sub Category", new { @class = "form-select", id = "subcategorySearch" })
    </div>
</div>
<table id="employeeTable" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.EmployeeId)</th>
            <th>@Html.DisplayNameFor(model => model.SelectedLocation)</th>
            <th>@Html.DisplayNameFor(model => model.SelectedDepartment)</th>
            <th>@Html.DisplayNameFor(model => model.SelectedCategory)</th>
            <th>@Html.DisplayNameFor(model => model.SelectedSubCategory)</th>
            <th>@Html.DisplayNameFor(model => model.E1)</th>
            <th>@Html.DisplayNameFor(model => model.E2)</th>
            <th>C</th>
            <th>@Html.DisplayNameFor(model => model.M1)</th>
            <th>@Html.DisplayNameFor(model => model.M2)</th>
            <th>Handle</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>


<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-controller="Employee" asp-action="Delete">
                <div class="modal-body">
                    <input type="hidden" id="Id" name="Id" />
                    <p>Are you sure you want to delete this record?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal fade" id="employeeModal" tabindex="-1" aria-labelledby="employeeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="employeeModalLabel">Edit record</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-controller="Employee" asp-action="Edit">

                    <input type="hidden" asp-for="EmployeeId" class="form-control" />


                    @{
                        var isAdmin = User.IsInRole(Constants.Roles.Administrator);
                    }

                    <div class="mb-3">
                        <label asp-for="SelectedLocation" class="form-label"></label>
                        @Html.DropDownListFor(m => m.SelectedLocation, Model.Locations, (isAdmin) ? new { @class = "form-select" } : new { @class = "form-select", disabled = true })
                    </div>

                    <div class="mb-3">
                        <label asp-for="SelectedDepartment" class="form-label"></label>
                        @Html.DropDownListFor(m => m.SelectedDepartment, Model.Departments, (isAdmin) ? new { @class = "form-select" } : new { @class = "form-select", disabled = true })
                    </div>

                    <div class="mb-3">
                        <label asp-for="SelectedCategory" class="form-label"></label>
                        @Html.DropDownListFor(m => m.SelectedCategory, Model.Categories, (isAdmin) ? new { @class = "form-select" } : new { @class = "form-select", disabled = true })
                    </div>

                    <div class="mb-3">
                        <label asp-for="SelectedSubCategory" class="form-label"></label>
                        @Html.DropDownListFor(m => m.SelectedSubCategory, Model.SubCategories, (isAdmin) ? new { @class = "form-select" } : new { @class = "form-select", disabled = true })
                    </div>

                    <div class="mb-3">
                        <label asp-for="E1" class="form-label"></label>
                        <input asp-for="E1" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label asp-for="E2" class="form-label"></label>
                        <input asp-for="E2" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label asp-for="M1" class="form-label"></label>
                        <input asp-for="M1" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label asp-for="M2" class="form-label"></label>
                        <input asp-for="M2" class="form-control" />
                    </div>

                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>


    <script type="text/javascript">
        $(document).ready(function () {

            setTimeout(function () {
                $("#successMessage").fadeOut("slow");
                $("#errorMessage").fadeOut("slow");
            }, 3000);

            var table = $('#employeeTable').DataTable({
                processing: true,
                serverSide: true,
                searching: false,
                ordering: false,
                ajax: {
                    url: '/employee/GetList',
                    type: 'POST',
                    contentType: 'application/json',
                    data: function (d) {
                        var customFilter = {
                            draw: d.draw,
                            start: d.start,
                            length: d.length,
                            location: $('#locationSearch').val(),
                            category: $('#categorySearch').val(),
                            department: $('#departmentSearch').val(),
                            subcategory: $('#subcategorySearch').val()
                        };
                        return JSON.stringify(customFilter);
                    },
                    dataSrc: 'data'
                },
                columns: [
                    { data: 'id', visible: false },
                    { data: 'locationName' },
                    { data: 'departmentName' },
                    { data: 'categoryName' },
                    { data: 'subCategoryName' },
                    { data: 'e1' },
                    { data: 'e2' },
                    { data: 'c' },
                    { data: 'm1' },
                    { data: 'm2' },
                    {
                        data: 'id',
                        render: function (data, type, row) {
                            return '<i class="fa fa-edit btn-edit" data-id="' + data + '"></i> ' +
                                '<i class="fa fa-trash btn-delete" data-id="' + data + '"></i>';
                        }
                    }
                ]
            });

            $('#locationSearch, #categorySearch, #departmentSearch, #subcategorySearch').on('change', function () {
                table.draw();
            });

            // Handle Edit button click
            $('#employeeTable').on('click', '.btn-edit', function () {
                var id = $(this).data('id');

                $.ajax({
                    url: '/employee/Edit?id=' + id,
                    method: 'GET',
                    success: function (employee) {

                        $('#EmployeeId').val(id);
                        $('#SelectedLocation').val(employee.selectedLocation).trigger('change');
                        $('#SelectedDepartment').val(employee.selectedDepartment).trigger('change');
                        $('#SelectedCategory').val(employee.selectedCategory).trigger('change');
                        $('#SelectedSubCategory').val(employee.selectedSubCategory).trigger('change');
                        $('#E1').val(employee.e1);
                        $('#E2').val(employee.e2);
                        $('#M1').val(employee.m1);
                        $('#M2').val(employee.m2);

                        $('#employeeModal').modal('show');
                    },
                    error: function () {
                        // Handle error
                    }
                });
            });


            // Handle Delete button click
            $('#employeeTable').on('click', '.btn-delete', function () {
                var id = $(this).data('id');
                $('#Id').val(id);
                $('#deleteConfirmationModal').modal('show');
            });

        });
    </script>
}