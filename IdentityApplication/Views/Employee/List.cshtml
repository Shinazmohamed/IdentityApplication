@using IdentityApplication.Core;
@using IdentityApplication.Core.PermissionHelper
@model IdentityApplication.Core.ViewModel.InsertEmployeeRequest

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3" id="successMessage">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3" id="errorMessage">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    <div class="col-md-6">
        <label for="locationSearch">Search by Location:</label>
        @Html.DropDownListFor(m => m.SelectedLocation, Model.Locations, "All", new { id = "locationSearch" })
    </div>
    <div class="col-md-6">
        <label for="departmentSearch">Search by Department:</label>
        @Html.DropDownListFor(m => m.SelectedDepartment, Model.Departments, "All", new { id = "departmentSearch" })
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <label for="categorySearch">Search by Category:</label>
        @Html.DropDownListFor(m => m.SelectedCategory, Model.Categories, "All", new { id = "categorySearch" })
    </div>
    <div class="col-md-6">
        <label for="subcategorySearch">Search by Sub Category:</label>
        @Html.DropDownListFor(m => m.SelectedSubCategory, Model.SubCategories, "All", new { id = "subcategorySearch" })
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-6">
        <button type="button" id="reset" class="btn btn-success">Reset All</button>
    </div>
</div>
<br />
<hr class="my-4">

<table id="employeeTable" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.EmployeeId)</th>
            <th>@Html.DisplayNameFor(model => model.SelectedLocation)</th>
            <th>@Html.DisplayNameFor(model => model.SelectedDepartment)</th>
            <th>@Html.DisplayNameFor(model => model.SelectedCategory)</th>
            <th>@Html.DisplayNameFor(model => model.SelectedSubCategory)</th>
            <th>@Html.DisplayNameFor(model => model.E1)</th>
            <th>@Html.DisplayNameFor(model => model.E2)</th>
            <th>C</th>
            <th>@Html.DisplayNameFor(model => model.M1)</th>
            <th>@Html.DisplayNameFor(model => model.M2)</th>
            <th>Handle</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-controller="Employee" asp-action="Delete">
                <div class="modal-body">
                    <input type="hidden" id="Id" name="Id" />
                    <p>Are you sure you want to delete this record?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="employeeModal" tabindex="-1" aria-labelledby="employeeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="employeeModalLabel">Edit record</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-controller="Employee" asp-action="Edit">
                    <input type="hidden" asp-for="EmployeeId" class="form-control" />
                    <div class="mb-3">
                        <label asp-for="SelectedLocation" class="form-label"></label>
                        @Html.DropDownListFor(m => m.SelectedLocation, Model.Locations, (Model.IsAdminOrSuperDev) ? new { id = "SelectedLocation" } : new { id = "SelectedLocation", disabled = true })
                    </div>

                    <div class="mb-3">
                        <label asp-for="SelectedDepartment" class="form-label"></label>
                        @Html.DropDownListFor(m => m.SelectedDepartment, Model.Departments, (Model.IsAdminOrSuperDev) ? new { id = "department" } : new { id = "department", disabled = true })
                    </div>

                    <div class="mb-3">
                        <label asp-for="SelectedCategory" class="form-label"></label>
                        @Html.DropDownListFor(m => m.SelectedCategory, Model.Categories, (Model.IsAdminOrSuperDev) ? new { id = "category" } : new { id = "category", disabled = true })
                        <input type="hidden" id="SelectedCategoryId" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label asp-for="SelectedSubCategory" class="form-label"></label>
                        @Html.DropDownListFor(m => m.SelectedSubCategory, Model.SubCategories, (Model.IsAdminOrSuperDev) ? new { id = "subcategory" } : new { id = "subcategory", disabled = true })
                        <input type="hidden" id="SelectedSubCategoryId" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label asp-for="E1" class="form-label"></label>
                        <input asp-for="E1" class="form-control" maxlength="6" />
                    </div>

                    <div class="mb-3">
                        <label asp-for="E2" class="form-label"></label>
                        <input asp-for="E2" class="form-control" maxlength="6" />
                    </div>

                    <div class="mb-3">
                        <label asp-for="M1" class="form-label"></label>
                        <input asp-for="M1" class="form-control" maxlength="6" />
                    </div>

                    <div class="mb-3">
                        <label asp-for="M2" class="form-label"></label>
                        <input asp-for="M2" class="form-control" maxlength="6" />
                    </div>

                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">

        var hasDeletePermission = @Html.Raw(Model.Delete.ToString().ToLower());
        var hasEditPermission = @Html.Raw(Model.Edit.ToString().ToLower());

        $(document).ready(function () {
            $('select').selectize({
                sortField: 'text'
            });

            setTimeout(function () {
                $("#successMessage").fadeOut("slow");
                $("#errorMessage").fadeOut("slow");
            }, 3000);

            var table = $('#employeeTable').DataTable({
                processing: true,
                serverSide: true,
                searching: false,
                ordering: false,
                ajax: {
                    url: '/employee/GetList',
                    type: 'POST',
                    contentType: 'application/json',
                    data: function (d) {
                        var customFilter = {
                            draw: d.draw,
                            start: d.start,
                            length: d.length,
                            location: $('#locationSearch')[0].selectize.getValue(),
                            category: $('#categorySearch')[0].selectize.getValue(),
                            department: $('#departmentSearch')[0].selectize.getValue(),
                            subcategory: $('#subcategorySearch')[0].selectize.getValue()
                        };
                        return JSON.stringify(customFilter);
                    },
                    dataSrc: 'data'
                },
                columns: [
                    { data: 'id', visible: false },
                    { data: 'locationName' },
                    { data: 'departmentName' },
                    { data: 'categoryName' },
                    { data: 'subCategoryName' },
                    { data: 'e1' },
                    { data: 'e2' },
                    { data: 'c' },
                    { data: 'm1' },
                    { data: 'm2' },
                    {
                        data: 'id',
                        render: function (data, type, row) {
                            var actionHtml = '<div class="btn-group">' +
                                '<button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Action</button>' +
                                '<div class="dropdown-menu shadow animated--grow-in">';
                            if(hasEditPermission){
                                actionHtml +=
                                    '<a class="dropdown-item">' +
                                    '<i class="fas fa-pencil-alt btn-edit" data-id="' + data + '"> Edit</i>' +
                                    '</a>';
                            }
                            if (hasDeletePermission) {
                                actionHtml +=
                                    '<form class="d-inline">' +
                                    '<a class="dropdown-item">' +
                                    '<i class="fas fa-trash-alt btn-delete" data-id="' + data + '"> Delete</i>' +
                                    '</a>' +
                                    '</form>';
                            }
                            actionHtml += '</div></div>';
                            return actionHtml;
                        }

                    }
                ]
            });

            $('#locationSearch, #categorySearch, #departmentSearch, #subcategorySearch').on('change', function () {
                table.draw();
            });

            $('#employeeTable').on('click', '.btn-edit', function () {
                var id = $(this).data('id');

                $.ajax({
                    url: '/employee/Edit?id=' + id,
                    method: 'GET',
                    success: function (employee) {
                        $('#EmployeeId').val(id);
                        $('#SelectedLocation')[0].selectize.setValue(employee.selectedLocation);

                        $('#SelectedSubCategoryId').val(employee.selectedSubCategory);
                        $('#SelectedCategoryId').val(employee.selectedCategory);
                        $('#department')[0].selectize.setValue(employee.selectedDepartment);
                        $('#category')[0].selectize.setValue(employee.selectedCategory);

                        $('#E1').val(employee.e1);
                        $('#E2').val(employee.e2);
                        $('#M1').val(employee.m1);
                        $('#M2').val(employee.m2);

                        $('#employeeModal').modal('show');
                    }
                });
            });

            $('#employeeTable').on('click', '.btn-delete', function () {
                var id = $(this).data('id');
                $('#Id').val(id);
                $('#deleteConfirmationModal').modal('show');
            });

            $(document).on('click', '#reset', function () {
                var isAdmin = '@Model.IsAdminOrSuperDev'.toLowerCase();
                if (isAdmin === 'true') {
                    $('#locationSearch')[0].selectize.setValue(0);
                }

                $('#SelectedSubCategoryId').val('');
                $('#SelectedCategoryId').val('');

                $('#departmentSearch')[0].selectize.setValue(0);
                $('#categorySearch')[0].selectize.setValue(0);
                $('#subcategorySearch')[0].selectize.setValue(0);

                clearselectizeddl('categorySearch');
                clearselectizeddl('subcategorySearch');
                table.draw();
            });

            $('#departmentSearch').change(function () {
                loadCategories($(this).val(), 'categorySearch');
            });

            $('#categorySearch').change(function () {
                loadSubCategories($(this).val(), 'subcategorySearch');
            });

            $('#department').change(function () {
                loadCategories($(this).val(), 'category');
            });

            $('#category').change(function () {
                loadSubCategories($(this).val(), 'subcategory');
            });

            function loadCategories(selectedDepartment, impactedElementName) {
                if (selectedDepartment) {
                    $.ajax({
                        url: '/Category/GetCategoryByDepartmentId?id=' + selectedDepartment,
                        method: 'GET',
                        contentType: 'application/json',
                        success: function (data) {
                            clearselectizeddl(impactedElementName);
                            $.each(data, function (index, item) {
                                $('#' + impactedElementName)[0].selectize.addOption({
                                    value: item.value,
                                    text: item.text
                                });
                            });


                            if ($('#SelectedCategoryId').val())
                                $('#' + impactedElementName)[0].selectize.setValue($('#SelectedCategoryId').val());
                        }
                    });
                }
            }

            function loadSubCategories(selectedCategory, impactedElementName) {
                if (selectedCategory) {
                    $.ajax({
                        url: '/SubCategory/GetSubcategories?id=' + selectedCategory,
                        method: 'GET',
                        contentType: 'application/json',
                        success: function (data) {
                            clearselectizeddl(impactedElementName);
                            $.each(data, function (index, item) {
                                $('#' + impactedElementName)[0].selectize.addOption({
                                    value: item.value,
                                    text: item.text
                                });
                                if ($('#SelectedSubCategoryId').val())
                                    $('#' + impactedElementName)[0].selectize.setValue($('#SelectedSubCategoryId').val());
                            });
                        }
                    });
                }
            }

            function clearselectizeddl(ddlName) {
                $('#' + ddlName)[0].selectize.clear();
                $('#' + ddlName)[0].selectize.clearOptions();
            }

        });
    </script>

}