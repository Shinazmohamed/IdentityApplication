@model IdentityApplication.Core.ViewModel.InsertEmployeeRequest
@using IdentityApplication.Core;
@using Microsoft.AspNetCore.Identity
@using IdentityApplication.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var isEditMode = Model.Id != Guid.Empty;
    var action = isEditMode ? "Edit" : "CreateEmployee";
    var buttonText = isEditMode ? "Update" : "Create";
    var isAdmin = (User.Claims.Any(e => e.Value == Constants.Roles.Administrator)) ? true : false;
}

<h2>@(isEditMode ? "Edit Employee" : "Create Employee")</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3">
        @TempData["ErrorMessage"]
    </div>
}

<form method="post" asp-controller="Employee" asp-action="@action">

    @if (isEditMode)
    {
        <input type="hidden" asp-for="Id" />
    }

    <p>@isEditMode</p>

    <div class="form-group">
        <label asp-for="SelectedLocation"></label>
        @Html.DropDownListFor(m => m.SelectedLocation, Model.Locations, "Location", new { @class = "form-select" })
        @Html.ValidationMessageFor(model => model.SelectedLocation)
    </div>

    <div class="form-group">
        <label asp-for="SelectedDepartment"></label>
        @Html.DropDownListFor(m => m.SelectedDepartment, Model.Departments, "Department", new { @class = "form-select" })
    </div>

    <div class="form-group">
        <label asp-for="SelectedCategory"></label>
        @Html.DropDownListFor(m => m.SelectedCategory, Model.Categories, "Category", new { @class = "form-select" })
    </div>

    <div class="form-group">
        <label asp-for="SelectedSubCategory"></label>
        @Html.DropDownListFor(m => m.SelectedSubCategory, Model.SubCategories, "SubCategory", new { @class = "form-select" })
    </div>

    <div class="form-group">
        <label asp-for="E1"></label>
        <input asp-for="E1" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="E2"></label>
        <input asp-for="E2" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="M1"></label>
        <input asp-for="M1" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="M2"></label>
        <input asp-for="M2" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">@buttonText</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        $(document).ready(function () {

            var isAdmin = '@isAdmin';
            var isEditMode = '@isEditMode';

            var locationDropdown = $("#SelectedLocation");
            var departmentDropdown = $("#SelectedDepartment");
            var categoryDropdown = $("#SelectedCategory");
            var subCategoryDropdown = $("#SelectedSubCategory");

            if (isAdmin === 'True') {
                locationDropdown.prop("disabled", false);
                departmentDropdown.prop("disabled", false);
                categoryDropdown.prop("disabled", false);
                subCategoryDropdown.prop("disabled", false);

            } else {
                locationDropdown.prop("disabled", true);
                if (isEditMode === 'True') {
                    departmentDropdown.prop("disabled", true);
                    categoryDropdown.prop("disabled", true);
                    subCategoryDropdown.prop("disabled", true);
                }
            }
        });
    </script>
}
