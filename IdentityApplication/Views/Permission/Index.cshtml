@using IdentityApplication.Core.PermissionHelper
@using IdentityApplication.Core.ViewModel
@model ManagePermission

<style>
    .hidden-column {
        display: none;
    }
</style>


<h1>Manage Permissions</h1>
<br />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3" id="successMessage">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger mt-3" id="errorMessage">
        @TempData["ErrorMessage"]
    </div>
}

<br />
<div class="card">
    <div class="card-body">
        <div class="d-flex justify-content-end">
            @if (Model.Create)
            {
                <button type="button" class="fas fa-plus btn btn-primary" id="btnEntity" style="margin-right: 10px;">
                    Add Entity
                </button>
            }
            <button type="button" class="fas fa-plus btn btn-primary" id="btnPermission">
                Add Permission
            </button>
        </div>


        <div id="viewAll" class="card-body table-responsive">
            <table id="entityTable" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th></th>
                        <th>Entity ID</th>
                        <th>Name</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- DataTable content will be loaded here dynamically -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-controller="Permission" asp-action="Delete">
                <div class="modal-body">
                    <input type="hidden" id="Id" name="Id" />
                    <p>Are you sure you want to delete this record?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="deleteEntityConfirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-controller="Entity" asp-action="Delete">
                <div class="modal-body">
                    <input type="hidden" id="deleteEntityId" name="deleteEntityId" />
                    <p>Are you sure you want to delete this record?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="permissionModal" tabindex="-1" aria-labelledby="employeeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="permissionModalLabel">Add Permission</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-controller="Permission" asp-action="Create" id="PermissionForm">
                    <input type="hidden" id="PermissionId" name="permissionId" />
                    <div class="col-md-6">
                        <label for="categorySearch">Entity :</label>
                        @Html.DropDownListFor(m => m.SelectedEntity, Model.Entities, "All", new { id = "SelectedEntity" })
                    </div>
                    <div class="col-md-6">
                        <label asp-for="Value" class="form-label">Value</label>
                        <input asp-for="Value" id="Value" name="Value" class="form-control" />
                    </div>
                    <br />
                    <div class="col-md-6" id="savePermission">
                        <button type="submit" class="btn btn-success" id="save">Save</button>
                    </div>
                    <div class="col-md-6" style="display:none" id="updatePermission">
                        <button type="button" class="btn btn-success" id="updatePermissionBtn">Update</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="entityModal" tabindex="-1" aria-labelledby="entityModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="entityModalLabel">Add Entity</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-controller="Entity" asp-action="Create" id="EntityForm">
                    <input type="hidden" id="EntityId" name="entityId" />
                    <div class="col-md-6">
                        <label asp-for="Entity" class="form-label">Entity</label>
                        <input asp-for="Entity" class="form-control" />
                    </div>
                    <br />
                    <div class="col-md-6" id="saveEntity">
                        <button type="submit" class="btn btn-success">Save</button>
                    </div>
                    <div class="col-md-6" style="display:none" id="updateEntity">
                        <button type="submit" class="btn btn-success" id="updateEntityBtn">Update</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(document).ready(function () {

            $('select').selectize({
                sortField: 'text'
            });

            var hasDeletePermission = '@Model.Delete';
            var hasEditPermission = '@Model.Edit';

            setTimeout(function () {
                $("#successMessage").fadeOut("slow");
                $("#errorMessage").fadeOut("slow");
            }, 3000);

            document.getElementById('btnPermission').onclick = function () {
                reset();
                enableUpdatePermissionBtn(false);
                $('#permissionModal').modal('show');
            };

            document.getElementById('btnEntity').onclick = function () {
                reset();
                enableUpdateEntityBtn(false);
                $('#entityModal').modal('show');
            };

            var table = $('#entityTable').DataTable({
                processing: true,
                serverSide: true,
                searching: false,
                ordering: false,
                ajax: {
                    url: '@Url.Action("GetAllPermission", "Permission")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: function (d) {
                        var customFilter = {
                            draw: d.draw,
                            start: d.start,
                            length: d.length
                        };
                        return JSON.stringify(customFilter);
                    },
                    dataSrc: 'data'
                },
                columns: [
                    {
                        className: 'dt-control',
                        orderable: false,
                        data: null,
                        defaultContent: ''
                    },
                    { data: 'entityId' },
                    { data: 'name' },
                    {
                        data: 'entityId',
                        render: function (data, type, row) {
                            var actionHtml = '<div class="btn-group">' +
                                '<button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Action</button>' +
                                '<div class="dropdown-menu shadow animated--grow-in">';

                            if (hasEditPermission) {
                                actionHtml +=
                                    '<a class="dropdown-item">' +
                                    '<i class="fas fa-pencil-alt btn-edit" data-id="' + data + '"> Edit</i>' +
                                    '</a>';
                            }
                            if (hasDeletePermission) {
                                actionHtml +=
                                    '<form class="d-inline">' +
                                    '<a class="dropdown-item">' +
                                    '<i class="fas fa-trash-alt btn-delete" data-id="' + data + '"> Delete</i>' +
                                    '</a>' +
                                    '</form>';
                            }
                            actionHtml += '</div></div>';
                            return actionHtml;
                        }

                    }
                ]
            });

            function format(d) {
                var permissionsTable = '<table id="permissionTable" class="table table-bordered">' +
                    '<thead>' +
                    '<tr>' +
                    '<th class="hidden-column">Id</th>' +
                    '<th>Value</th>' +
                    '<th>Action</th>' +
                    '</tr>' +
                    '</thead>' +
                    '<tbody>';

                if (d.permissions) {
                    d.permissions.forEach(function (permission) {
                        permissionsTable += '<tr>' +
                            '<td class="hidden-column">' + permission.id + '</td>' +
                            '<td>' + permission.value + '</td>' +
                            '<td>';

                        var actionHtml = '<div class="btn-group">' +
                            '<button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Action</button>' +
                            '<div class="dropdown-menu shadow animated--grow-in">';

                        if (hasEditPermission) {
                            actionHtml +=
                                '<a class="dropdown-item">' +
                                '<i class="fas fa-pencil-alt btn-permission-edit" data-id="' + permission.id + '"> Edit</i>' +
                                '</a>';
                        }
                        if (hasDeletePermission) {
                            actionHtml +=
                                '<form class="d-inline">' +
                                '<a class="dropdown-item">' +
                                '<i class="fas fa-trash-alt btn-permission-delete" data-id="' + permission.id + '"> Delete</i>' +
                                '</a>' +
                                '</form>';
                        }
                        actionHtml += '</div></div>';

                        permissionsTable += actionHtml + '</td></tr>';
                    });
                }
                permissionsTable += '</tbody></table>';

                return permissionsTable;
            }

            table.on('click', 'td.dt-control', function (e) {
                var tr = e.target.closest('tr');
                var row = table.row(tr);

                $('#EntityId').val(row.data().entityId);

                if (row.child.isShown()) {
                    row.child.hide();
                } else {
                    row.child(format(row.data())).show();
                }
            });

            $('#entityTable').on('click', '.btn-edit', function () {
                var row = $(this).closest('tr');
                var role = {
                    Id: row.find('td:eq(1)').text().trim(),
                    Value: row.find('td:eq(2)').text().trim()
                };

                $('#EntityId').val(role.Id);
                $('#Entity').val(role.Value);

                enableUpdateEntityBtn(true);
                $('#entityModalLabel').text('Edit Entity');
                $('#entityModal').modal('show');
            });

            $('#entityTable').on('click', '.btn-delete', function () {
                var row = $(this).closest('tr');
                var role = {
                    Id: row.find('td:eq(1)').text().trim(),
                    Value: row.find('td:eq(2)').text().trim()
                };
                $('#deleteEntityId').val(role.Id);
                console.log($('#deleteEntityId').val());

                $('#deleteEntityConfirmationModal').modal('show');
            });

            $('#entityTable').on('click', '.btn-permission-edit', function () {
                var row = $(this).closest('tr');
                var role = {
                    Id: row.find('td:eq(0)').text().trim(),
                    Value: row.find('td:eq(1)').text().trim()
                };

                $('#PermissionId').val(role.Id);
                $('#SelectedEntity')[0].selectize.setValue($('#EntityId').val());
                $('#Value').val(role.Value);

                enableUpdatePermissionBtn(true);

                $('#permissionModalLabel').text('Edit Permission');
                $('#permissionModal').modal('show');
            });

            $('#entityTable').on('click', '.btn-permission-delete', function () {
                var id = $(this).data('id');
                $('#Id').val(id);
                $('#deleteConfirmationModal').modal('show');
            });

            document.getElementById('updatePermissionBtn').onclick = function () {
                var form = document.getElementById('PermissionForm');
                form.action = '/Permission/Edit';
                form.submit();
            };

            document.getElementById('updateEntityBtn').onclick = function () {
                var form = document.getElementById('EntityForm');
                form.action = '/Entity/Edit';
                form.submit();
            };

            function enableUpdatePermissionBtn(shouldShowUpdateButton) {
                var savePermissionDiv = document.getElementById('savePermission');
                var updatePermissionDiv = document.getElementById('updatePermission');

                if (shouldShowUpdateButton) {
                    savePermissionDiv.style.display = 'none';
                    updatePermissionDiv.style.display = 'block';
                } else {
                    savePermissionDiv.style.display = 'block';
                    updatePermissionDiv.style.display = 'none';
                }
            }

            function enableUpdateEntityBtn(shouldShowUpdateButton) {
                var saveDiv = document.getElementById('saveEntity');
                var updateDiv = document.getElementById('updateEntity');

                if (shouldShowUpdateButton) {
                    saveDiv.style.display = 'none';
                    updateDiv.style.display = 'block';
                } else {
                    saveDiv.style.display = 'block';
                    updateDiv.style.display = 'none';
                }
            }

            function reset() {
                $('#Entity').val('');
                $('#SelectedEntity')[0].selectize.clear();
                $('#Value').val('');
                $('#permissionModalLabel').text('Add Permission');
                $('#entityModalLabel').text('Add Create');
            };


        });
    </script>

}