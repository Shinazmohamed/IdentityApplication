@using IdentityApplication.Core.ViewModel;
@model EditUserViewModel

<div class="container">
    <main>
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success mt-3" id="successMessage">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger mt-3" id="errorMessage">
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="py-5 text-center">
            <h2>Update User</h2>
        </div>

        <div class="col-md-7 col-lg-8">
            @using (Html.BeginForm("OnPost", "User", FormMethod.Post, new { id = "userForm" }))
            {
                @Html.HiddenFor(h => Model.User.Id, new { id = "UserId" })

                <div class="row g-3">
                    <div class="col-sm-6">
                        <label asp-for="@Model.User.Email" class="form-label">Email</label>
                        <div class="input-group hashas-validation">
                            <span class="input-group-text"></span>
                            <input type="email" class="form-control" asp-for="@Model.User.Email" placeholder="" value="@Model.User.Email">
                            <span asp-validation-for="@Model.User.Email" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <label asp-for="@Model.User.LocationId" class="form-label">Location</label>
                        @Html.DropDownListFor(c => Model.User.LocationId, Model.Locations, "Choose...", new { @class = "form-select", required = "required" })
                    </div>

                    <hr class="my-4">

                    <h4 class="mb-3">Roles</h4>

                    <div class="my-3">
                        @for (int i = 0; i < Model.Roles.Count(); i++)
                        {
                            <div>
                                @Html.CheckBoxFor(c => Model.Roles[i].Selected)
                                @Html.HiddenFor(h => Model.Roles[i].Value)

                                @Html.LabelFor(l => Model.Roles[i].Selected, Model.Roles[i].Text, new { @class = "form-check-label" })
                                @Html.HiddenFor(h => Model.Roles[i].Text)
                            </div>
                        }
                    </div>
                    <hr class="my-4">
                    <div class="my-3">
                        <button class="btn btn-primary" type="submit">Save</button>
                        <button class="btn btn-primary" type="button" onclick="resetPassword()">Reset Password</button>
                    </div>
                </div>
            }
        </div>
    </main>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        function resetPassword() {

            var form = document.getElementById('userForm');

            form.action = '/User/ResetPassword';

            // Submit the form
            form.submit();
        }

        $(document).ready(function () {
            setTimeout(function () {
                $("#successMessage").fadeOut("slow");
                $("#errorMessage").fadeOut("slow");
            }, 1000);
        });
    </script>
}
