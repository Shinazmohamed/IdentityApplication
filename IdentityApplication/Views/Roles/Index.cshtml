@using IdentityApplication.Core
@using IdentityApplication.Core.ViewModel;
@model RolesViewModel
<div class="container">
    <h1>Roles</h1>
    <br />
    <style>
        .hidden-column {
            display: none;
        }
    </style>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mt-3" id="successMessage">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger mt-3" id="errorMessage">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (Model.Create)
    {
        <form method="post" asp-action="addrole" asp-controller="roles" id="roleForm">
            <div class="input-group">

                <input type="hidden" asp-for="RoleId" />
                <input asp-for="RoleName" class="form-control w-25">
                <span class="input-group-btn">
                    <button class="btn btn-info" id="btnAdd">Add New Role</button>
                </span>
            </div>
        </form>
    }
    <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form method="post" asp-controller="Roles" asp-action="Delete">
                    <div class="modal-body">
                        <input type="hidden" id="Id" name="Id" />
                        <p>Are you sure you want to delete this record?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="modal fade" id="permissionmodel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="permissionForm" method="post">
                    <div class="modal-body">
                        <input id="RoleId" type="hidden" />

                        <div style="height: 550px; overflow-y: auto;">
                            <table id="permissionTable" class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Type</th>
                                        <th>Value</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="modal fade" id="manageMenuModel" tabindex="-1" aria-labelledby="manageMenuModelLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title" id="manageMenuModelLabel">Modal title</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="managemenuForm" method="post">
                    <div class="modal-body">
                        <input id="RoleId" type="hidden" />
                        <div style="height: 550px; overflow-y: auto;">
                            <table id="managemenuTable" class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>DisplayName</th>
                                        <th>Controller</th>
                                        <th>Method</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div style="height: 650px; overflow-y: auto;">
        <table class="table table-striped" id="roleTable">
            <thead>
                <tr>
                    <th>
                        Role
                    </th>
                    <th>
                        Id
                    </th>
                    <th style="width:10%">
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var role in Model.Roles)
                {
                    <tr>
                        <td>
                            @role.Name
                        </td>
                        <td>
                            @role.Id
                        </td>
                        <td class="text-right">
                            <div class="btn-group">
                                <button type="button" class="btn btn-default dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    Action
                                </button>
                                <div class="dropdown-menu shadow animated--grow-in">
                                    @if (Model.Edit)
                                    {
                                        <a style='margin-right:16px' class="dropdown-item btn-edit" data-id="@role.Id" href="#">
                                            <i class="fas fa-pencil-alt"></i> Edit
                                        </a>
                                    }
                                    @if (Model.Delete)
                                    {
                                        <a style='margin-right:16px' class="dropdown-item btn-delete" data-id="@role.Id" href="#">
                                            <i class="fas fa-trash-alt"></i> Delete
                                        </a>
                                    }
                                    @if (role.Name != $"{Constants.Roles.SuperDeveloper}")
                                    {
                                        if (Model.AssignPermission)
                                        {
                                            <a style='margin-right:16px' class="dropdown-item btn-permission" data-id="@role.Id" href="#">
                                                <i class="fas fa-wrench"></i> Manage Permissions
                                            </a>
                                        }
                                        if (Model.AssignMenu)
                                        {
                                            <a style='margin-right:16px' class="dropdown-item btn-menu" data-id="@role.Id" href="#">
                                                <i class="fas fa-wrench"></i> Manage Menu
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(document).ready(function () {
            setTimeout(function () {
                $("#successMessage").fadeOut("slow");
                $("#errorMessage").fadeOut("slow");
            }, 3000);

            var table = $('#permissionTable').DataTable();
            var manageMenuTable = $('#manageMenuTable').DataTable();

            $('#roleTable').on('click', '.btn-menu', function (e) {
                var row = $(this).closest('tr');
                var role = {
                    Name: row.find('td:eq(0)').text().trim(),
                    Id: row.find('td:eq(1)').text().trim()
                };
                $('#RoleId').val(role.Id);

                if ($.fn.DataTable.isDataTable('#managemenuTable')) {
                    manageMenuTable.destroy();
                }
                manageMenuTable = $('#managemenuTable').DataTable({
                    processing: true,
                    serverSide: true,
                    searching: false,
                    ordering: false,
                    pageLength: 100,
                    ajax: {
                        url: '/SubMenu/GetAll',
                        type: 'POST',
                        contentType: 'application/json',
                        data: function (d) {
                            var customFilter = {
                                draw: d.draw,
                                start: d.start,
                                length: d.length,
                                roleId: role.Id
                            };
                            return JSON.stringify(customFilter);
                        }
                    },
                    columns: [
                        { data: 'id', visible: false },
                        { data: 'displayName' },
                        { data: 'controller' },
                        { data: 'method' },
                        {
                            data: 'selected',
                            render: function (data, type, row) {
                                return '<input type="checkbox" class="checkbox-select" ' + (data ? 'checked' : '') + '>';
                            }
                        }
                    ]
                });

                $('#manageMenuModelLabel').text('Manage Menu for ' + role.Name)
                $('#manageMenuModel').modal('show');
            });

            $('#roleTable').on('click', '.btn-permission', function () {
                var row = $(this).closest('tr');
                var role = {
                    Name: row.find('td:eq(0)').text().trim(),
                    Id: row.find('td:eq(1)').text().trim()
                };

                $('#RoleId').val(role.Id);

                if ($.fn.DataTable.isDataTable('#permissionTable')) {
                    table.destroy();
                }

                table = $('#permissionTable').DataTable({
                    processing: true,
                    serverSide: true,
                    searching: false,
                    ordering: false,
                    pageLength: 100,
                    ajax: {
                        url: '/Permission/GetPermissionByRole',
                        type: 'POST',
                        contentType: 'application/json',
                        data: function (d) {
                            var customFilter = {
                                draw: d.draw,
                                start: d.start,
                                length: d.length,
                                roleId: role.Id
                            };
                            return JSON.stringify(customFilter);
                        },
                        dataSrc: 'data'
                    },
                    columns: [
                        { data: 'type' },
                        { data: 'value' },
                        {
                            data: 'selected',
                            render: function (data, type, row) {
                                return '<input type="checkbox" class="checkbox-select" ' + (data ? 'checked' : '') + '>';
                            }
                        }
                    ]
                });

                $('#exampleModalLabel').text('Manage Permissions for ' + role.Name)
                $('#permissionmodel').modal('show');
            });

            $('#roleTable').on('click', '.btn-delete', function () {
                var id = $(this).data('id');
                $('#Id').val(id);
                $('#deleteConfirmationModal').modal('show');
            });

            $('#roleTable').on('click', '.btn-edit', function () {

                var clickedRow = $(this).closest('tr');
                var role = clickedRow.find('td:nth-child(1)').text();
                var id = $(this).data('id');

                $('#RoleId').val(id);
                $('#RoleName').val(role.trim());

                var button = document.getElementById("btnAdd");
                button.innerHTML = "Update";
            });

            $('#permissionTable').on('change', '.checkbox-select', function () {
                var rowIndex = table.row($(this).closest('tr')).index();
                var rowData = table.row(rowIndex).data();
                rowData.selected = this.checked;
            });

            $('#managemenuTable').on('change', '.checkbox-select', function () {
                var rowIndex = manageMenuTable.row($(this).closest('tr')).index();
                var rowData = manageMenuTable.row(rowIndex).data();
                rowData.selected = this.checked;
            });

            $('#permissionForm').on('submit', function (e) {
                e.preventDefault();
                var formData = table.rows().data().toArray();

                var json = {
                    RoleId: $('#RoleId').val(),
                    RoleClaims: formData
                };

                $.ajax({
                    url: '/Permission/Update',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(json),
                    success: function (response) {
                        $('#errorMessage').hide();
                        $('#successMessage').html('Permission updated successfully.').show();

                        setTimeout(function () {
                            $("#successMessage").fadeOut("slow");
                        }, 3000);

                        $('#permissionmodel').modal('hide');
                    },
                    error: function (error) {
                        $('#successMessage').hide();
                        $('#errorMessage').html('Permission update failed.').show();
                        $('#permissionmodel').modal('hide');
                        setTimeout(function () {
                            $("#errorMessage").fadeOut("slow");
                        }, 3000);
                    }
                });
            });

            $('#managemenuForm').on('submit', function (e) {
                e.preventDefault();
                var formData = manageMenuTable.rows().data().toArray();

                var json = {
                    RoleId: $('#RoleId').val(),
                    menuData: formData
                };
                $.ajax({
                    url: '/SubMenu/SaveMenuData',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(json),
                    success: function (response) {
                        $('#errorMessage').hide();
                        $('#successMessage').html('Permission updated successfully.').show();

                        setTimeout(function () {
                            $("#successMessage").fadeOut("slow");
                        }, 3000);

                        $('#manageMenuModel').modal('hide');
                    },
                    error: function (error) {
                        $('#successMessage').hide();
                        $('#errorMessage').html('Permission update failed.').show();
                        $('#manageMenuModel').modal('hide');
                        setTimeout(function () {
                            $("#errorMessage").fadeOut("slow");
                        }, 3000);
                    }
                });

            });

            document.getElementById('btnAdd').onclick = function () {

                var form = document.getElementById('roleForm');
                var button = document.getElementById("btnAdd");

                if (button.innerHTML === "Add New Role") {
                    form.submit();
                } else {
                    form.action = '/Roles/Edit';
                    form.submit();
                }
            };
        });
    </script>
}
