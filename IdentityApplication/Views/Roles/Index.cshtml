@using IdentityApplication.Core
@using Microsoft.AspNetCore.Identity;
@model IEnumerable<IdentityRole>
<h1>Roles</h1>
<br />
<style>
    .hidden-column {
        display: none;
    }
</style>

<div class="alert alert-success mt-3" id="successMessage" style="display:none">
    @if (TempData["SuccessMessage"] != null)
    {
        @TempData["SuccessMessage"]
    }
</div>
<div class="alert alert-danger mt-3" id="errorMessage" style="display:none">
    @if (TempData["ErrorMessage"] != null)
    {
        @TempData["ErrorMessage"]
    }
</div>

<form method="post" asp-action="addrole" asp-controller="roles">
    <div class="input-group">
        <input name="roleName" class="form-control w-25">
        <span class="input-group-btn">
            <button class="btn btn-info">Add New Role</button>
        </span>
    </div>
</form>

<div class="modal fade" id="permissionmodel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="permissionForm" method="post">
                <div class="modal-body">
                    <input id="RoleId" type="hidden" />
                    <table id="permissionTable" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Type</th>
                                <th>Value</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="MenuModel" tabindex="-1" aria-labelledby="MenuModelLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="MenuModelLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="menuForm" method="post">
                <!-- Change the form id -->
                <div class="modal-body">
                    <input id="RoleId" type="hidden" />
                    @await Component.InvokeAsync("ManageMenu")
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<table class="table table-striped" id="roleTable">
    <thead>
        <tr>
            <th>
                Role
            </th>
            <th>
                Id
            </th>
            <th style="width:10%">
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var role in Model)
        {
            <tr>
                <td>
                    @role.Name
                </td>
                <td>
                    @role.Id
                </td>
                <td class="text-right">
                    <div class="btn-group">
                        <button type="button" class="btn btn-default dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                            Action
                        </button>
                        <div class="dropdown-menu shadow animated--grow-in">
                            <a class="dropdown-item" href="#">
                                <i class="fas fa-pencil-alt"></i> Edit
                            </a>
                            <form class="d-inline-block" type="submit">
                                <a class="dropdown-item" href="#"><i class="fas fa-trash-alt"></i> Delete</a>
                            </form>
                            @if (role.Name != $"{Constants.Roles.SuperDeveloper}")
                            {
                                <a style='margin-right:16px' class="dropdown-item btn-permission" data-id="@role.Id" href="#">
                                    <i class="fas fa-wrench"></i> Manage Permissions
                                </a>
                            }
                            <a style='margin-right:16px' class="dropdown-item btn-menu" data-id="@role.Id" href="#">
                                <i class="fas fa-wrench"></i> Manage Menu
                            </a>
                        </div>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(document).ready(function () {

            $('#MenuModel').modal({
                backdrop: 'static',
                keyboard: false
            });

            $("#successMessage").fadeOut("slow");
            $("#errorMessage").fadeOut("slow");

            var table = $('#permissionTable').DataTable();

            $('#roleTable').on('click', '.btn-menu', function (e) {
                e.preventDefault();
                var row = $(this).closest('tr');
                var role = {
                    Name: row.find('td:eq(0)').text().trim(),
                    Id: row.find('td:eq(1)').text().trim()
                };

                $('#RoleId').val(role.Id);
                $('#MenuModelLabel').text('Manage Menu for ' + role.Name)
                $('#MenuModel').modal('show');
            });

            $('#roleTable').on('click', '.btn-permission', function () {
                var row = $(this).closest('tr');
                var role = {
                    Name: row.find('td:eq(0)').text().trim(),
                    Id: row.find('td:eq(1)').text().trim()
                };

                $('#RoleId').val(role.Id);

                table.clear().destroy();
                table = $('#permissionTable').DataTable({
                    processing: true,
                    serverSide: true,
                    searching: false,
                    ordering: false,
                    ajax: {
                        url: '/Permission/GetPermissionByRole',
                        type: 'POST',
                        contentType: 'application/json',
                        data: function (d) {
                            var customFilter = {
                                draw: d.draw,
                                start: d.start,
                                length: d.length,
                                roleId: role.Id
                            };
                            return JSON.stringify(customFilter);
                        },
                        dataSrc: 'data'
                    },
                    columns: [
                        { data: 'type' },
                        { data: 'value' },
                        {
                            data: 'selected',
                            render: function (data, type, row) {
                                return '<input type="checkbox" class="checkbox-select" ' + (data ? 'checked' : '') + '>';
                            }
                        }
                    ]
                });

                $('#exampleModalLabel').text('Manage Permissions for ' + role.Name)
                $('#permissionmodel').modal('show');
            });

            $('#permissionTable').on('change', '.checkbox-select', function () {
                var rowIndex = table.row($(this).closest('tr')).index();
                var rowData = table.row(rowIndex).data();
                rowData.selected = this.checked;
            });

            $('#permissionForm').on('submit', function (e) {
                e.preventDefault();
                var formData = table.rows().data().toArray();

                var json = {
                    RoleId: $('#RoleId').val(),
                    RoleClaims: formData
                };

                $.ajax({
                    url: '/Permission/Update',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(json),
                    success: function (response) {
                        $('#errorMessage').hide();
                        $('#successMessage').html('Permission updated successfully.').show();

                        setTimeout(function () {
                            $("#successMessage").fadeOut("slow");
                        }, 3000);

                        $('#permissionmodel').modal('hide');
                    },
                    error: function (error) {
                        // Hide any existing success messages
                        $('#successMessage').hide();

                        // Show error message
                        $('#errorMessage').html('Permission update failed.').show();

                        $('#permissionmodel').modal('hide');
                        setTimeout(function () {
                            $("#errorMessage").fadeOut("slow");
                        }, 3000);
                    }
                });
            });

            var menutable = $('#menuTable').DataTable({
                processing: true,
                serverSide: true,
                searching: false,
                ordering: false,
                ajax: {
                    url: '/Menu/GetAll',
                    type: 'POST',
                    contentType: 'application/json',
                    data: function (d) {
                        var customFilter = {
                            draw: d.draw,
                            start: d.start,
                            length: d.length
                        };
                        return JSON.stringify(customFilter);
                    },
                    dataSrc: 'data'
                },
                columns: [
                    {
                        className: 'dt-control',
                        orderable: false,
                        data: null,
                        defaultContent: ''
                    },
                    { data: 'id', visible: false },
                    { data: 'displayName' }
                ]
            });

            var subMenuTable = $('#submenuTable').DataTable({
                searching: false,
                paging: false,
                info: false
            });

            function formatmenutable(d) {
                var subMenuTable = '<table id="submenuTable" class="table table-bordered">' +
                    '<thead>' +
                    '<tr>' +
                    '<th class="hidden-column">Id</th>' +
                    '<th>Sub Menu</th>' +
                    '<th></th>' +
                    '</tr>' +
                    '</thead>' +
                    '<tbody>';

                if (d.subMenu) {
                    d.subMenu.forEach(function (subMenu) {
                        subMenuTable += '<tr>' +
                            '<td class="hidden-column">' + subMenu.id + '</td>' +
                            '<td>' + subMenu.displayName + '</td>' +
                            '<td><input type="checkbox" class="childCheckbox"></td>' +
                            '</tr>';
                    });
                }
                subMenuTable += '</tbody></table>';

                return subMenuTable;
            }

            menutable.on('click', 'td.dt-control', function (e) {
                var tr = e.target.closest('tr');
                var row = menutable.row(tr);

                if (row.child.isShown()) {
                    row.child.hide();
                } else {
                    row.child(formatmenutable(row.data())).show();

                    $(document).on('click', '#submenuTable .childCheckbox', function (e) {
                        var subTr = $(this).closest('tr');
                        var subRow = subMenuTable.row(subTr);
                        console.log(subRow.data());
                    });
                }
            });

            $('#menuForm').submit(function (e) {
                e.preventDefault();
                var menuData = [];

                $('#submenuTable tbody tr').each(function () {
                    var id = $(this).find('.hidden-column').text();
                    var displayName = $(this).find('td:eq(1)').text();
                    var isChecked = $(this).find('.childCheckbox').prop('checked');

                    menuData.push({ Id: id, DisplayName: displayName, IsChecked: isChecked });
                });

                var formData = {
                    menuData: menuData,
                    RoleId: $('#RoleId').val()
                };

                $.ajax({
                    url: '/Menu/SaveMenuData',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function (response) {
                        $('#errorMessage').hide();
                        $('#successMessage').html('Menu updated successfully.').show();

                        setTimeout(function () {
                            $("#successMessage").fadeOut("slow");
                        }, 3000);

                        $('#MenuModel').modal('hide');
                    },
                    error: function (error) {
                        $('#successMessage').hide();
                        $('#errorMessage').html('Menu update failed.').show();
                        $('#MenuModel').modal('hide');

                        setTimeout(function () {
                            $("#errorMessage").fadeOut("slow");
                        }, 3000);
                    }
                });
            });
        });
    </script>
}
